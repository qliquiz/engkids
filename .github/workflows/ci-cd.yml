name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Prepare dependencies
        run: |
          go clean -modcache
          go mod download

      - name: Verify dependencies
        run: |
          go mod tidy -compat=1.24
          if [ -n "$(git status --porcelain go.mod go.sum)" ]; then
            echo "Error: go.mod or go.sum changed after go mod tidy"
            git diff go.mod go.sum
            exit 1
          fi

  build:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod tidy && go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Lint
        run: |
          if ! command -v golangci-lint &> /dev/null; then
            go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          fi
          golangci-lint run --timeout 5m ./...

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: engkids-app:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /root/engkids/engkids
            docker compose down
            docker compose up -d --build